m=int(input('enter the size of mat 1-row'))
n=int(input('enter the size of mat 1-col'))
k=int(input('enter the size of mat2-row'))
l=int(input('enter the size of mat2-col'))
        
a=[]
b=[]
for i in range(m):
     col = []
     for j in range(n):
        num=int(input('enter the numbers'))
        col.append(num)
     a.append(col)
print("The First Original Matrix is",a)
for i in range(k):
     col = []
     for j in range(l):
        num=int(input('enter the numbers'))
        col.append(num)
     b.append(col)
print("The Second Original  Matrix is",b)
def sparse_matrix(matrix,m,n):
    s=[]
   
    i=1
    j=1
    for i in range(len(matrix)):
        for j in range(len(matrix[0])):
            if matrix[i][j]!= 0 :
                temp = []
                temp.append(i)
                temp.append(j)
                temp.append(matrix[i][j])
                s.append(temp)
                s[0][0]=m
                s[0][1]=n
    
    return s
    
def add(s1,s2):
    i = 1
    j = 1
    k = 1
    s3 = []
    if ((s1[0][0] == s2[0][0]) and (s1[0][1] == s2[0][1])):
        while ((i <= s1[0][2]) and (j <= s2[0][2])):            
            if (s1[i][0] == s2[j][0]):
                temp =[]
                if (s1[i][1] == s2[j][1]):
                    temp.append(s1[i][0])
                    temp.append(s1[i][1])
                    temp.append(s1[i][2]+s2[j][2])
                    s3.append(temp)
                    i += 1
                    j += 1
                    k += 1
                elif (s1[i][1]<s2[j][1]):
                    temp.append(s1[i][0])
                    temp.append(s1[i][1])
                    temp.append(s1[i][2])
                    s3.append(temp)
                    i += 1
                    k += 1
                else:
                    temp.append(s2[j][0])
                    temp.append(s2[j][1])
                    temp.append(s2[j][2])
                    s3.append(temp)
                    j += 1
                    k += 1                    
            elif (s1[i][0]<s2[j][0]):
                temp =[]
                temp.append(s1[i][0])
                temp.append(s1[i][1])
                temp.append(s1[i][2])
                s3.append(temp)
                i +=1
                k +=1
            else:
                temp =[]
                temp.append(s1[j][0])
                temp.append(s1[j][1])
                temp.append(s1[j][2])
                s3.append(temp)
                j +=1
                k +=1

        while (i <= s1[0][2]): 
            temp = []
            temp.append(s1[i][0])
            temp.append(s1[i][1])
            temp.append(s1[i][2])
            s3.append(temp)
            i += 1
            k += 1
        while (j <= s2[0][2]):
            temp = []
            temp.append(s2[j][0])
            temp.append(s2[j][1])
            temp.append(s2[j][2])
            s3.append(temp)            
            j += 1
            k += 1            
       
        s3.insert(0,[s1[0][0],s1[0][1],k-1])
    else:
        print("\n Addition is not possible")
        
    print("Addition of Sparse Matrix is")
    print("\nRow  Col  Non_Zero_values")
    for row in s3: 
        for element in row: 
            print(element, end ="    ") 
        print() 
         
  def transpose(matrix):
    s = []
    for i in matrix:
        s.append([i[1],i[0],i[2]])
        
    return s


c=sparse_matrix(matrix=a,m=m,n=n)
print("The First sparse matrix is",c)
d=sparse_matrix(matrix=b,m=k,n=l)
print("The Second sparse matrix is",d)
add(c,d)
y=transpose(a)
print("Transpose of First matrix is",y)
